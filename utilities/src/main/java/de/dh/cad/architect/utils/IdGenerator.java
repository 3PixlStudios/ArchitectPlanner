/*******************************************************************************
 *     Architect - A free 2D/3D home and interior designer
 *     Copyright (C) 2021 - 2023  Daniel HÃ¶h
 *
 *     This program is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     This program is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     You should have received a copy of the GNU General Public License
 *     along with this program.  If not, see <https://www.gnu.org/licenses/>
 *******************************************************************************/
package de.dh.cad.architect.utils;

import java.util.UUID;

import org.apache.commons.lang3.StringUtils;

public class IdGenerator {
    public static String generateUniqueId() {
        return UUID.randomUUID().toString();
    }

    public static String generateUniqueId(String idHint) {
        if (FeatureToggles.HUMAN_READABLE_IDS && !StringUtils.isEmpty(idHint)) {
            return idHint + "-" + UUID.randomUUID().toString();
        }
        return generateUniqueId();
    }

    public static String generateUniqueId(Class<?> clazz) {
        return generateUniqueId(clazz.getSimpleName());
    }

    /**
     * When IDs are generated by this class, depending on feature toggle {@link FeatureToggles#HUMAN_READABLE_IDS},
     * the generated ids might contain a classname or another hint in the first characters of the generated string.
     * This method removes those characters and only returns the last 36 characters which are part of the UUID.
     * @param generatedId Id which was generated by this {@link IdGenerator}.
     * @return Id which was cleaned up.
     */
    public static String getUniquePartFromId(String generatedId) {
        return StringUtils.right(generatedId, 36);
    }
}
